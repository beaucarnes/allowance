rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /kids/{kidId} {
      function hasAccess() {
        return request.auth != null && (
          resource.data.parentId == request.auth.uid || 
          (resource.data.sharedWith is list && 
           request.auth.token.email in resource.data.sharedWith)
        );
      }

      // Allow listing kids for authenticated users
      allow list: if request.auth != null;

      // Allow reading if kid is public or user has access
      allow get: if resource.data.public == true || 
                 (request.auth != null && hasAccess());

      // Allow updates if user has access
      allow update: if request.auth != null && hasAccess();

      // Allow creating if authenticated
      allow create: if request.auth != null;

      // Transactions subcollection
      match /transactions/{transactionId} {
        // Allow all operations if parent document is accessible
        allow read, write: if 
          request.auth != null && 
          exists(/databases/$(database)/documents/kids/$(kidId)) && (
            get(/databases/$(database)/documents/kids/$(kidId)).data.parentId == request.auth.uid ||
            (
              get(/databases/$(database)/documents/kids/$(kidId)).data.sharedWith is list && 
              request.auth.token.email in get(/databases/$(database)/documents/kids/$(kidId)).data.sharedWith
            )
          );
      }
    }
  }
}